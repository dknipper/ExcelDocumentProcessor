//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExcelDocumentProcessor.Web.ApplicationLogic.Proxies.DataService
{
    using System.Runtime.Serialization;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonISGDatabaseType", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    public enum NeonISGDatabaseType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISGAdmin = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISGClient = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISGInput = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISGOutput = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISGTransient = 4,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonDataTable", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    public partial class NeonDataTable : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private System.Collections.Generic.List<NeonDataTableColumn> ColumnsField;

        private string NameField;

        private System.Collections.Generic.List<NeonDataTableRow> RowsField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<NeonDataTableColumn> Columns
        {
            get
            {
                return this.ColumnsField;
            }
            set
            {
                this.ColumnsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<NeonDataTableRow> Rows
        {
            get
            {
                return this.RowsField;
            }
            set
            {
                this.RowsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonDataTableColumn", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    public partial class NeonDataTableColumn : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private System.Nullable<short> ColumnOrdinalField;

        private string ExcelColumnField;

        private string FriendlyNameField;

        private bool IsNullableField;

        private bool IsPrimaryKeyField;

        private bool IsReadonlyIdentityField;

        private short LengthField;

        private string NameField;

        private string ParentSourceTableField;

        private string ParentTableField;

        private System.Nullable<short> PrecisionField;

        private System.Nullable<int> ScaleField;

        private string StrongTypeNameField;

        private string TypeNameField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ColumnOrdinal
        {
            get
            {
                return this.ColumnOrdinalField;
            }
            set
            {
                this.ColumnOrdinalField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelColumn
        {
            get
            {
                return this.ExcelColumnField;
            }
            set
            {
                this.ExcelColumnField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FriendlyName
        {
            get
            {
                return this.FriendlyNameField;
            }
            set
            {
                this.FriendlyNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNullable
        {
            get
            {
                return this.IsNullableField;
            }
            set
            {
                this.IsNullableField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrimaryKey
        {
            get
            {
                return this.IsPrimaryKeyField;
            }
            set
            {
                this.IsPrimaryKeyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadonlyIdentity
        {
            get
            {
                return this.IsReadonlyIdentityField;
            }
            set
            {
                this.IsReadonlyIdentityField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Length
        {
            get
            {
                return this.LengthField;
            }
            set
            {
                this.LengthField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentSourceTable
        {
            get
            {
                return this.ParentSourceTableField;
            }
            set
            {
                this.ParentSourceTableField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentTable
        {
            get
            {
                return this.ParentTableField;
            }
            set
            {
                this.ParentTableField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Precision
        {
            get
            {
                return this.PrecisionField;
            }
            set
            {
                this.PrecisionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Scale
        {
            get
            {
                return this.ScaleField;
            }
            set
            {
                this.ScaleField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrongTypeName
        {
            get
            {
                return this.StrongTypeNameField;
            }
            set
            {
                this.StrongTypeNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName
        {
            get
            {
                return this.TypeNameField;
            }
            set
            {
                this.TypeNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonDataTableRow", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    public partial class NeonDataTableRow : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private System.Collections.Generic.List<NeonDataTableCell> CellsField;

        private string RowIdField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<NeonDataTableCell> Cells
        {
            get
            {
                return this.CellsField;
            }
            set
            {
                this.CellsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowId
        {
            get
            {
                return this.RowIdField;
            }
            set
            {
                this.RowIdField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonDataTableCell", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    public partial class NeonDataTableCell : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string ColumnNameField;

        private string ValueField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName
        {
            get
            {
                return this.ColumnNameField;
            }
            set
            {
                this.ColumnNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonDataTableRowMetaData", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    public partial class NeonDataTableRowMetaData : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private System.Collections.Generic.List<NeonDataTableCellMetaData> CellsField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<NeonDataTableCellMetaData> Cells
        {
            get
            {
                return this.CellsField;
            }
            set
            {
                this.CellsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonDataTableCellMetaData", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeonISGDatabaseType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeonDataTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<NeonDataTableColumn>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeonDataTableColumn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<NeonDataTableRow>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeonDataTableRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<NeonDataTableCell>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeonDataTableCell))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeonDataTableRowMetaData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<NeonDataTableCellMetaData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<NeonYearQuarter>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeonYearQuarter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<NeonClient>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeonClient))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<NeonDataTableMetaData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeonDataTableMetaData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<NeonExcelValidationRecord>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeonExcelValidationRecord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeonExcelValidationDataType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeonExcelValidationResultType))]
    public partial class NeonDataTableCellMetaData : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string ColumnNameField;

        private bool IsPrimaryKeyField;

        private string TypeNameField;

        private object ValueField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName
        {
            get
            {
                return this.ColumnNameField;
            }
            set
            {
                this.ColumnNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrimaryKey
        {
            get
            {
                return this.IsPrimaryKeyField;
            }
            set
            {
                this.IsPrimaryKeyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName
        {
            get
            {
                return this.TypeNameField;
            }
            set
            {
                this.TypeNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonYearQuarter", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    public partial class NeonYearQuarter : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string EndDateField;

        private int IdField;

        private string LastMonthField;

        private string QuarterField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate
        {
            get
            {
                return this.EndDateField;
            }
            set
            {
                this.EndDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastMonth
        {
            get
            {
                return this.LastMonthField;
            }
            set
            {
                this.LastMonthField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quarter
        {
            get
            {
                return this.QuarterField;
            }
            set
            {
                this.QuarterField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonClient", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    public partial class NeonClient : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private int ClientKeyField;

        private string ClientNameField;

        private string InputTableField;

        private string OutputTableField;

        private string RecordStatusField;

        private string TransientTableField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientKey
        {
            get
            {
                return this.ClientKeyField;
            }
            set
            {
                this.ClientKeyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName
        {
            get
            {
                return this.ClientNameField;
            }
            set
            {
                this.ClientNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InputTable
        {
            get
            {
                return this.InputTableField;
            }
            set
            {
                this.InputTableField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutputTable
        {
            get
            {
                return this.OutputTableField;
            }
            set
            {
                this.OutputTableField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordStatus
        {
            get
            {
                return this.RecordStatusField;
            }
            set
            {
                this.RecordStatusField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransientTable
        {
            get
            {
                return this.TransientTableField;
            }
            set
            {
                this.TransientTableField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonDataTableMetaData", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    public partial class NeonDataTableMetaData : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private System.Collections.Generic.List<NeonDataTableColumn> ColumnsField;

        private NeonISGDatabaseType DatabaseTypeField;

        private NeonDataTableMetaData MetaDataField;

        private string NameField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<NeonDataTableColumn> Columns
        {
            get
            {
                return this.ColumnsField;
            }
            set
            {
                this.ColumnsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public NeonISGDatabaseType DatabaseType
        {
            get
            {
                return this.DatabaseTypeField;
            }
            set
            {
                this.DatabaseTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public NeonDataTableMetaData MetaData
        {
            get
            {
                return this.MetaDataField;
            }
            set
            {
                this.MetaDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonExcelValidationRecord", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    public partial class NeonExcelValidationRecord : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string BadValueField;

        private string CodeField;

        private string ExcelColumnField;

        private System.Nullable<int> ExcelRowField;

        private string ExcelSheetField;

        private NeonExcelValidationDataType ExcelValidationDataTypeField;

        private NeonExcelValidationResultType ExcelValidationResultTypeField;

        private string FileNameField;

        private int IdField;

        private System.Nullable<int> MaxStringLengthField;

        private string MessageField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BadValue
        {
            get
            {
                return this.BadValueField;
            }
            set
            {
                this.BadValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                this.CodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelColumn
        {
            get
            {
                return this.ExcelColumnField;
            }
            set
            {
                this.ExcelColumnField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ExcelRow
        {
            get
            {
                return this.ExcelRowField;
            }
            set
            {
                this.ExcelRowField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelSheet
        {
            get
            {
                return this.ExcelSheetField;
            }
            set
            {
                this.ExcelSheetField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public NeonExcelValidationDataType ExcelValidationDataType
        {
            get
            {
                return this.ExcelValidationDataTypeField;
            }
            set
            {
                this.ExcelValidationDataTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public NeonExcelValidationResultType ExcelValidationResultType
        {
            get
            {
                return this.ExcelValidationResultTypeField;
            }
            set
            {
                this.ExcelValidationResultTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxStringLength
        {
            get
            {
                return this.MaxStringLengthField;
            }
            set
            {
                this.MaxStringLengthField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonExcelValidationDataType", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    public enum NeonExcelValidationDataType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Boolean = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTimeOffset = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Decimal = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        WholeNumber = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeSpan = 6,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Guid = 7,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "NeonExcelValidationResultType", Namespace = "http://schemas.datacontract.org/2004/07/Neon.ISG.Services.DataContracts")]
    public enum NeonExcelValidationResultType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequiredColumnMissing = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequiredFieldWithNoValue = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataTypeValidation = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaximumStringLengthViolation = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemException = 6,
    }



    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "INeonISGDataService")]
    public interface INeonISGDataService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetRowCount", ReplyAction = "http://tempuri.org/INeonISGDataService/GetRowCountResponse")]
        long GetRowCount(string tableName, string filterData, NeonISGDatabaseType databaseType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetRowCount", ReplyAction = "http://tempuri.org/INeonISGDataService/GetRowCountResponse")]
        System.Threading.Tasks.Task<long> GetRowCountAsync(string tableName, string filterData, NeonISGDatabaseType databaseType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetData", ReplyAction = "http://tempuri.org/INeonISGDataService/GetDataResponse")]
        NeonDataTable GetData(string tableName, string sortIndex, string sortOrder, long pageIndex, long pageSize, string filters, NeonISGDatabaseType databaseType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetData", ReplyAction = "http://tempuri.org/INeonISGDataService/GetDataResponse")]
        System.Threading.Tasks.Task<NeonDataTable> GetDataAsync(string tableName, string sortIndex, string sortOrder, long pageIndex, long pageSize, string filters, NeonISGDatabaseType databaseType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetDistinctValues", ReplyAction = "http://tempuri.org/INeonISGDataService/GetDistinctValuesResponse")]
        System.Collections.Generic.List<string> GetDistinctValues(string tableName, string columnName, NeonISGDatabaseType databaseType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetDistinctValues", ReplyAction = "http://tempuri.org/INeonISGDataService/GetDistinctValuesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetDistinctValuesAsync(string tableName, string columnName, NeonISGDatabaseType databaseType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/Login", ReplyAction = "http://tempuri.org/INeonISGDataService/LoginResponse")]
        System.Nullable<int> Login(string userName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/Login", ReplyAction = "http://tempuri.org/INeonISGDataService/LoginResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> LoginAsync(string userName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/UserHasFunction", ReplyAction = "http://tempuri.org/INeonISGDataService/UserHasFunctionResponse")]
        bool UserHasFunction(int userId, int functionId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/UserHasFunction", ReplyAction = "http://tempuri.org/INeonISGDataService/UserHasFunctionResponse")]
        System.Threading.Tasks.Task<bool> UserHasFunctionAsync(int userId, int functionId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/SaveRow", ReplyAction = "http://tempuri.org/INeonISGDataService/SaveRowResponse")]
        bool SaveRow(string tableName, NeonDataTableRowMetaData row, NeonISGDatabaseType databaseType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/SaveRow", ReplyAction = "http://tempuri.org/INeonISGDataService/SaveRowResponse")]
        System.Threading.Tasks.Task<bool> SaveRowAsync(string tableName, NeonDataTableRowMetaData row, NeonISGDatabaseType databaseType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetYearQuarters", ReplyAction = "http://tempuri.org/INeonISGDataService/GetYearQuartersResponse")]
        System.Collections.Generic.List<NeonYearQuarter> GetYearQuarters();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetYearQuarters", ReplyAction = "http://tempuri.org/INeonISGDataService/GetYearQuartersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NeonYearQuarter>> GetYearQuartersAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetActiveClients", ReplyAction = "http://tempuri.org/INeonISGDataService/GetActiveClientsResponse")]
        System.Collections.Generic.List<NeonClient> GetActiveClients();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetActiveClients", ReplyAction = "http://tempuri.org/INeonISGDataService/GetActiveClientsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NeonClient>> GetActiveClientsAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetAllMetaData", ReplyAction = "http://tempuri.org/INeonISGDataService/GetAllMetaDataResponse")]
        System.Collections.Generic.List<NeonDataTableMetaData> GetAllMetaData();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetAllMetaData", ReplyAction = "http://tempuri.org/INeonISGDataService/GetAllMetaDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NeonDataTableMetaData>> GetAllMetaDataAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetExcelValidationRecordsByCode", ReplyAction = "http://tempuri.org/INeonISGDataService/GetExcelValidationRecordsByCodeResponse" +
            "")]
        System.Collections.Generic.List<NeonExcelValidationRecord> GetExcelValidationRecordsByCode(string recordCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetExcelValidationRecordsByCode", ReplyAction = "http://tempuri.org/INeonISGDataService/GetExcelValidationRecordsByCodeResponse" +
            "")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NeonExcelValidationRecord>> GetExcelValidationRecordsByCodeAsync(string recordCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetExcelValidationRecordsByFileName", ReplyAction = "http://tempuri.org/INeonISGDataService/GetExcelValidationRecordsByFileNameResp" +
            "onse")]
        System.Collections.Generic.List<NeonExcelValidationRecord> GetExcelValidationRecordsByFileName(string fileName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetExcelValidationRecordsByFileName", ReplyAction = "http://tempuri.org/INeonISGDataService/GetExcelValidationRecordsByFileNameResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NeonExcelValidationRecord>> GetExcelValidationRecordsByFileNameAsync(string fileName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetAllExcelValidationRecords", ReplyAction = "http://tempuri.org/INeonISGDataService/GetAllExcelValidationRecordsResponse")]
        System.Collections.Generic.List<NeonExcelValidationRecord> GetAllExcelValidationRecords();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INeonISGDataService/GetAllExcelValidationRecords", ReplyAction = "http://tempuri.org/INeonISGDataService/GetAllExcelValidationRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NeonExcelValidationRecord>> GetAllExcelValidationRecordsAsync();
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INeonISGDataServiceChannel : INeonISGDataService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NeonISGDataServiceClient : System.ServiceModel.ClientBase<INeonISGDataService>, INeonISGDataService
    {

        public NeonISGDataServiceClient()
        {
        }

        public NeonISGDataServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public NeonISGDataServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public NeonISGDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public NeonISGDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public long GetRowCount(string tableName, string filterData, NeonISGDatabaseType databaseType)
        {
            return base.Channel.GetRowCount(tableName, filterData, databaseType);
        }

        public System.Threading.Tasks.Task<long> GetRowCountAsync(string tableName, string filterData, NeonISGDatabaseType databaseType)
        {
            return base.Channel.GetRowCountAsync(tableName, filterData, databaseType);
        }

        public NeonDataTable GetData(string tableName, string sortIndex, string sortOrder, long pageIndex, long pageSize, string filters, NeonISGDatabaseType databaseType)
        {
            return base.Channel.GetData(tableName, sortIndex, sortOrder, pageIndex, pageSize, filters, databaseType);
        }

        public System.Threading.Tasks.Task<NeonDataTable> GetDataAsync(string tableName, string sortIndex, string sortOrder, long pageIndex, long pageSize, string filters, NeonISGDatabaseType databaseType)
        {
            return base.Channel.GetDataAsync(tableName, sortIndex, sortOrder, pageIndex, pageSize, filters, databaseType);
        }

        public System.Collections.Generic.List<string> GetDistinctValues(string tableName, string columnName, NeonISGDatabaseType databaseType)
        {
            return base.Channel.GetDistinctValues(tableName, columnName, databaseType);
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetDistinctValuesAsync(string tableName, string columnName, NeonISGDatabaseType databaseType)
        {
            return base.Channel.GetDistinctValuesAsync(tableName, columnName, databaseType);
        }

        public System.Nullable<int> Login(string userName)
        {
            return base.Channel.Login(userName);
        }

        public System.Threading.Tasks.Task<System.Nullable<int>> LoginAsync(string userName)
        {
            return base.Channel.LoginAsync(userName);
        }

        public bool UserHasFunction(int userId, int functionId)
        {
            return base.Channel.UserHasFunction(userId, functionId);
        }

        public System.Threading.Tasks.Task<bool> UserHasFunctionAsync(int userId, int functionId)
        {
            return base.Channel.UserHasFunctionAsync(userId, functionId);
        }

        public bool SaveRow(string tableName, NeonDataTableRowMetaData row, NeonISGDatabaseType databaseType)
        {
            return base.Channel.SaveRow(tableName, row, databaseType);
        }

        public System.Threading.Tasks.Task<bool> SaveRowAsync(string tableName, NeonDataTableRowMetaData row, NeonISGDatabaseType databaseType)
        {
            return base.Channel.SaveRowAsync(tableName, row, databaseType);
        }

        public System.Collections.Generic.List<NeonYearQuarter> GetYearQuarters()
        {
            return base.Channel.GetYearQuarters();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<NeonYearQuarter>> GetYearQuartersAsync()
        {
            return base.Channel.GetYearQuartersAsync();
        }

        public System.Collections.Generic.List<NeonClient> GetActiveClients()
        {
            return base.Channel.GetActiveClients();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<NeonClient>> GetActiveClientsAsync()
        {
            return base.Channel.GetActiveClientsAsync();
        }

        public System.Collections.Generic.List<NeonDataTableMetaData> GetAllMetaData()
        {
            return base.Channel.GetAllMetaData();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<NeonDataTableMetaData>> GetAllMetaDataAsync()
        {
            return base.Channel.GetAllMetaDataAsync();
        }

        public System.Collections.Generic.List<NeonExcelValidationRecord> GetExcelValidationRecordsByCode(string recordCode)
        {
            return base.Channel.GetExcelValidationRecordsByCode(recordCode);
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<NeonExcelValidationRecord>> GetExcelValidationRecordsByCodeAsync(string recordCode)
        {
            return base.Channel.GetExcelValidationRecordsByCodeAsync(recordCode);
        }

        public System.Collections.Generic.List<NeonExcelValidationRecord> GetExcelValidationRecordsByFileName(string fileName)
        {
            return base.Channel.GetExcelValidationRecordsByFileName(fileName);
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<NeonExcelValidationRecord>> GetExcelValidationRecordsByFileNameAsync(string fileName)
        {
            return base.Channel.GetExcelValidationRecordsByFileNameAsync(fileName);
        }

        public System.Collections.Generic.List<NeonExcelValidationRecord> GetAllExcelValidationRecords()
        {
            return base.Channel.GetAllExcelValidationRecords();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<NeonExcelValidationRecord>> GetAllExcelValidationRecordsAsync()
        {
            return base.Channel.GetAllExcelValidationRecordsAsync();
        }
    }

}
